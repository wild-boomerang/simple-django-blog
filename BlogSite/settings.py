"""
Django settings for BlogSite project.

Generated by 'django-admin startproject' using Django 3.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
from django.urls import reverse_lazy

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
with open('etc/secret_key.txt') as f:
    SECRET_KEY = f.read().strip()

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1', '.pythonanywhere.com']


# Application definition

INSTALLED_APPS = [
    'blog',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'taggit',
    # django-user-accounts
    # 'django.contrib.sites',
    # 'account',
    # django-registration
    # 'registration',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # django-user-accounts
    # 'account.middleware.LocaleMiddleware',
    # 'account.middleware.TimezoneMiddleware',
]

ROOT_URLCONF = 'BlogSite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # django-user-accounts
                # 'account.context_processors.account',
            ],
        },
    },
]

WSGI_APPLICATION = 'BlogSite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Europe/Moscow'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

LOGIN_REDIRECT_URL = '/'
LOGIN_URL = reverse_lazy('login')
LOGOUT_URL = reverse_lazy('logout')

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'fileHandler': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': 'debug.log',
            'formatter': 'my_formatter'
        },
        'consoleHandler': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'my_formatter',
        },
    },
    'loggers': {
        'my_logger': {
            'handlers': ['consoleHandler', 'fileHandler'],
            'level': 'DEBUG',
            'propagate': True,
        }
    },
    'formatters': {
        'my_formatter': {
            'format': '{asctime} - {module} - {process:d} - {thread:d} - {levelname} - {message}',
            'style': '{',
        },
        "myFormatter": {
            "format": "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
        },
    },
}

with open('etc/email.txt') as f:
    EMAIL_NAME = f.readline().strip()
    EMAIL_PASSWORD = f.readline().strip()

# django-user-accounts
# ACCOUNT_EMAIL_UNIQUE = True
# ACCOUNT_EMAIL_CONFIRMATION_REQUIRED = True
# SITE_ID = 2
#
# # ACCOUNT_LOGIN_URL = 'blog:account_login'
# # ACCOUNT_EMAIL_CONFIRMATION_ANONYMOUS_REDIRECT_URL = ACCOUNT_LOGIN_URL
# # ACCOUNT_PASSWORD_RESET_REDIRECT_URL = ACCOUNT_LOGIN_URL
# # ACCOUNT_EMAIL_CONFIRMATION_URL = "blog:account_confirm_email"
# # ACCOUNT_SETTINGS_REDIRECT_URL = 'blog:account_settings'
# # ACCOUNT_PASSWORD_CHANGE_REDIRECT_URL = "blog:account_password"
#
# EMAIL_HOST = "smtp.gmail.com"
# EMAIL_PORT = 25
# EMAIL_HOST_USER = EMAIL_NAME
# EMAIL_HOST_PASSWORD = EMAIL_PASSWORD
# DEFAULT_FROM_EMAIL = EMAIL_HOST_USER


# Sending Email
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = EMAIL_NAME
EMAIL_HOST_PASSWORD = EMAIL_PASSWORD
# EMAIL_PORT = 587
# EMAIL_USE_TLS = True

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
MAILER_EMAIL_BACKEND = EMAIL_BACKEND
EMAIL_PORT = 465
EMAIL_USE_SSL = True
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER


# django-registration
# ACCOUNT_ACTIVATION_DAYS = 2
# AUTH_USER_EMAIL_UNIQUE = True
# EMAIL_HOST = 'smtp.gmail.com'
# EMAIL_HOST_USER = EMAIL_NAME
# EMAIL_HOST_PASSWORD = EMAIL_PASSWORD
# EMAIL_USE_TLS = False
# DEFAULT_FROM_EMAIL = 'info@google.ru'
# EMAIL_PORT = 1025
